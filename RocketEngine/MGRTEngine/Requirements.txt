결국 Renderer가 적합하게 동작하는 양상은, 초반에 어떻게 될 것인가?

달라질 수 있어야 하는 것/필수 요소.

IRenderer 아래:
Forward Renderer <-> Deferred Renderer.
(서로 다른 Context를 가지고, Render할 수 있어야!)

Vertex, Index를 갖고 처리해야 하는 애들:
-> 정정! Renderer 제외, 
-> 전부다 Local Space 기준으로 Vertex의 위치만 필요!

//Mesh Renderer (==Renderer)
//Mesh Collider (==Collider)

Renderer만이 Vertex들을 들고 있을 수는 없다.
Collider도 Vertex의 존재들을 알아야 하며,
자연스럽게 Entity의 소속이 된다.

//Entity가 IComponent의 제어를 받고,
//이에 따라 값을 집어넣는다고 하자.
//Component 단위에서 지금까지의 구조처럼 System을 발동시킬 수 없다.
//각 루프마다, System에 서로를 붙이는 것!

//저장된 정보가 있으면, Attach되는 방식으로 진행될 것.
//Formation이라는 존재가 있다.
//Formation은 개별적으로 null이면 정보가 없는 거고,
//정보가 있으면 Formation 구조체가 있는 것.



Vertex들의 집합 : -> 
Transform이랑 별개가 될 것이다.











